{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Atefeh\\\\Desktop\\\\Demo\\\\Houtman_src\\\\src\\\\components\\\\List.js\";\nimport \"../styles/List.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport ListEditor from \"./ListEditor\";\nimport shortid from \"shortid\";\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editingTitle: false,\n      title: _this.props.list.title,\n      addingCard: false\n    };\n\n    _this.toggleAddingCard = function () {\n      return _this.setState({\n        addingCard: !_this.state.addingCard\n      });\n    };\n\n    _this.addCard =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(cardText) {\n        var _this$props, listId, dispatch, cardId;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, listId = _this$props.listId, dispatch = _this$props.dispatch;\n\n                _this.toggleAddingCard();\n\n                cardId = shortid.generate();\n                dispatch({\n                  type: \"ADD_CARD\",\n                  payload: {\n                    cardText: cardText,\n                    cardId: cardId,\n                    listId: listId\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.toggleEditingTitle = function () {\n      return _this.setState({\n        editingTitle: !_this.state.editingTitle\n      });\n    };\n\n    _this.handleChangeTitle = function (e) {\n      return _this.setState({\n        title: e.target.value\n      });\n    };\n\n    _this.editListTitle =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$props2, listId, dispatch, title;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = _this.props, listId = _this$props2.listId, dispatch = _this$props2.dispatch;\n              title = _this.state.title;\n\n              _this.toggleEditingTitle();\n\n              dispatch({\n                type: \"CHANGE_LIST_TITLE\",\n                payload: {\n                  listId: listId,\n                  listTitle: title\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.deleteList =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$props3, listId, list, dispatch;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props3 = _this.props, listId = _this$props3.listId, list = _this$props3.list, dispatch = _this$props3.dispatch;\n              dispatch({\n                type: \"DELETE_LIST\",\n                payload: {\n                  listId: listId,\n                  cards: list.cards\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          list = _this$props4.list,\n          index = _this$props4.index;\n      var _this$state = this.state,\n          editingTitle = _this$state.editingTitle,\n          addingCard = _this$state.addingCard,\n          title = _this$state.title;\n      return React.createElement(Draggable, {\n        draggableId: list._id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, function (provided, snapshot) {\n        return React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          className: \"List\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), editingTitle ? React.createElement(ListEditor, {\n          list: list,\n          title: title,\n          handleChangeTitle: _this2.handleChangeTitle,\n          saveList: _this2.editListTitle,\n          onClickOutside: _this2.editListTitle,\n          deleteList: _this2.deleteList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          className: \"List-Title\",\n          onClick: _this2.toggleEditingTitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, list.title), React.createElement(Droppable, {\n          droppableId: list._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, function (provided, _snapshot) {\n          return React.createElement(\"div\", {\n            ref: provided.innerRef,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, list.cards && list.cards.map(function (cardId, index) {\n            return React.createElement(Card, {\n              key: cardId,\n              cardId: cardId,\n              index: index,\n              listId: list._id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            });\n          }), provided.placeholder);\n        }), addingCard ? React.createElement(CardEditor, {\n          onSave: _this2.addCard,\n          onCancel: _this2.toggleAddingCard,\n          adding: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }) : React.createElement(\"div\", {\n          className: \"Toggle-Add-Card\",\n          onClick: _this2.toggleAddingCard,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"ion-icon\", {\n          name: \"add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }), \" Add a card\"));\n      });\n    }\n  }]);\n\n  return List;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    list: state.listsById[ownProps.listId]\n  };\n};\n\nexport default connect(mapStateToProps)(List);","map":{"version":3,"sources":["C:\\Users\\Atefeh\\Desktop\\Demo\\Houtman_src\\src\\components\\List.js"],"names":["React","Component","connect","Droppable","Draggable","Card","CardEditor","ListEditor","shortid","List","state","editingTitle","title","props","list","addingCard","toggleAddingCard","setState","addCard","cardText","listId","dispatch","cardId","generate","type","payload","toggleEditingTitle","handleChangeTitle","e","target","value","editListTitle","listTitle","deleteList","cards","index","_id","provided","snapshot","innerRef","draggableProps","dragHandleProps","_snapshot","map","placeholder","mapStateToProps","ownProps","listsById"],"mappings":"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","sourcesContent":["import \"../styles/List.css\";\r\n\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\nimport Card from \"./Card\";\r\nimport CardEditor from \"./CardEditor\";\r\nimport ListEditor from \"./ListEditor\";\r\n\r\nimport shortid from \"shortid\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    editingTitle: false,\r\n    title: this.props.list.title,\r\n    addingCard: false\r\n  };\r\n\r\n  toggleAddingCard = () =>\r\n    this.setState({ addingCard: !this.state.addingCard });\r\n\r\n  addCard = async cardText => {\r\n    const { listId, dispatch } = this.props;\r\n\r\n    this.toggleAddingCard();\r\n\r\n    const cardId = shortid.generate();\r\n\r\n    dispatch({\r\n      type: \"ADD_CARD\",\r\n      payload: { cardText, cardId, listId }\r\n    });\r\n  };\r\n\r\n  toggleEditingTitle = () =>\r\n    this.setState({ editingTitle: !this.state.editingTitle });\r\n\r\n  handleChangeTitle = e => this.setState({ title: e.target.value });\r\n\r\n  editListTitle = async () => {\r\n    const { listId, dispatch } = this.props;\r\n    const { title } = this.state;\r\n\r\n    this.toggleEditingTitle();\r\n\r\n    dispatch({\r\n      type: \"CHANGE_LIST_TITLE\",\r\n      payload: { listId, listTitle: title }\r\n    });\r\n  };\r\n\r\n  deleteList = async () => {\r\n    const { listId, list, dispatch } = this.props;\r\n\r\n    dispatch({\r\n      type: \"DELETE_LIST\",\r\n      payload: { listId, cards: list.cards }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { list, index } = this.props;\r\n    const { editingTitle, addingCard, title } = this.state;\r\n\r\n    return (\r\n      <Draggable draggableId={list._id} index={index}>\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            className=\"List\"\r\n          >\r\n            {editingTitle ? (\r\n              <ListEditor\r\n                list={list}\r\n                title={title}\r\n                handleChangeTitle={this.handleChangeTitle}\r\n                saveList={this.editListTitle}\r\n                onClickOutside={this.editListTitle}\r\n                deleteList={this.deleteList}\r\n              />\r\n            ) : (\r\n              <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\r\n                {list.title}\r\n              </div>\r\n            )}\r\n\r\n            <Droppable droppableId={list._id}>\r\n              {(provided, _snapshot) => (\r\n                <div ref={provided.innerRef}>\r\n                  {list.cards &&\r\n                    list.cards.map((cardId, index) => (\r\n                      <Card\r\n                        key={cardId}\r\n                        cardId={cardId}\r\n                        index={index}\r\n                        listId={list._id}\r\n                      />\r\n                    ))}\r\n\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n\r\n            {addingCard ? (\r\n              <CardEditor\r\n                onSave={this.addCard}\r\n                onCancel={this.toggleAddingCard}\r\n                adding\r\n              />\r\n            ) : (\r\n              <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\r\n                <ion-icon name=\"add\" /> Add a card\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  list: state.listsById[ownProps.listId]\r\n});\r\n\r\nexport default connect(mapStateToProps)(List);\r\n"]},"metadata":{},"sourceType":"module"}